@charset "utf-8";
// ===================================================================
// mixinやらCSS3やら、extendも。
// ===================================================================


// border-radius
@mixin border_radius($br_value) {
	@each $prefix in $set_prefix {
		#{$prefix}border-radius: $br_value;
	}
}
// background-size
@mixin bg_size($w, $h: auto) {
	@each $prefix in $set_prefix {
		#{$prefix}background-size: $w $h;
	}
}
// min-height
@mixin min_height($value) {
	min-height: $value;
	_height: $value;
}


// ===================================================================
// extend
// ===================================================================
@if $use_extend_object {
/* 汎用クラス */

	// リストマーカー
	[class^="mark"] {
		padding-left: 15px;
		background: no-repeat left .5em;
	}
	@for $i from 1 through 5 {
		.mark#{$i} {
			background-image: url(#{$img_path}share/mark_#{$i}.gif);
		}
	}

	// 簡易ロールオーバー
	@if $opacity_value {
		.opacity {
			opacity: $opacity_value;
			-moz-opacity: $opacity_value;
			filter: alpha(opacity=#{$opacity_value * 100});
			-ms-filter: "alpha(opacity=#{$opacity_value * 100})";
		}
	}

	// inline-block
	.inline_block {
		display: inline-block;
		 @if $support-ie and $support-ie != 0 and $support-ie < 8 {
			 *display: inline;
       *zoom: 1;
    }
	}

	// table-cell
	.table_cell {
		display: table-cell;
		@if $support-ie and $support-ie != 0 and $support-ie < 8 {
		*display: inline;
		*zoom: 1;
		}
		vertical-align: middle;
	}

	// float: right
	.fr,
	.imgR {
		float: right;
		margin-left: 10px;
	}

	// float: left
	.fl,
	.imgL {
		float: left;
		margin-right: 10px;
	}

	// text-align: center
	.imgC,
	.tC,
	.btn {
		text-align: center;
	}

	// img Centering
	.imgC {
		display: block;
		margin-left: auto;
		margin-right: auto;
	}

	// text-align: right
	.tR,
	.sign {
		text-align: right;
	}

	// box-sizing
	.box_size {
		@each $prefix in $set_prefix {
			#{$prefix}box-sizing: border-box;
		}
	}

	// text-shadow none
	.ts_none {
		@each $prefix in $set_prefix {
			#{$prefix}text-shadow: none !important;;
		}
	}

	// box-shadow none
	.bs_none {
		@each $prefix in $set_prefix {
			#{$prefix}box-shadow: none !important;;
		}
	}


	// 余白調整用のクラス
	@if $use_spacing_classes {
		@for $i from 0 through 20 {
			.mt#{$i * 5} { margin-top: 5px * $i !important; }
			.mb#{$i * 5} { margin-bottom: 5px * $i !important; }
			.pt#{$i * 5} { padding-top: 5px * $i !important; }
			.pb#{$i * 5} { padding-bottom: 5px * $i !important; }
		}
	}

}

/* clearfix */
.clearfix {
	*zoom: 1;
	&:after {
		content: ".";
		display: block;
		clear: both;
		height: 0;
		visibility: hidden;
	}
}


//  POSITION:ABSOLUTE
@mixin patl($top:0,$left:0) { position: absolute; top: $top; left: $left; }
@mixin patr($top:0,$right:0) { position: absolute; top: $top; right: $right; }
@mixin pabl($bottom:0,$left:0) { position: absolute; bottom: $bottom; left: $left; }
@mixin pabr($bottom:0,$right:0) { position: absolute; bottom: $bottom; right: $right; }
@mixin wh100 { width:100%; height:100%; }


// Typography Option
@mixin ttup {text-transform: uppercase;}

// Print Control
@mixin no-print () {
    @media print {
        display: none;
    }
}

// Clearfix on CSS
// nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix {
    @if $support-ie and $support-ie != 0 and $support-ie < 8 { *zoom: 1; }
    &:before, &:after {
        content: " ";
        display: table;
    }
    &:after { clear: both; }
}

// Text sizing - font-size, line-height and letter-spacing
@mixin text-sizing ($font-size, $line-height, $letter-spacing: 0) {
    @if unitless($font-size) {
        $font-size: $font-size * 1px;
    } @else if unit($font-size) != px {
        @warn "`$font-size` must be in px or unitless";
    }
    @if unitless($line-height) {
        $line-height: $line-height * 1px;
    } @else if unit($line-height) != px {
        @warn "`$line-height` must be in px or unitless";
    }
    @if unitless($letter-spacing) {
        $letter-spacing: $letter-spacing * 1px;
    } @else if unit($letter-spacing) != px {
        @warn "`$letter-spacing` must be in px or unitless";
    }
    font-size: $font-size;
    line-height: x-ceil-decimal($line-height/$font-size, 2);
    @if $letter-spacing != 0 {
        letter-spacing: x-ceil-decimal($letter-spacing/$font-size, 2) * 1em;
    }
}

// Sizing type (font-size and line-height)
// @mixin type-sizing ($font-size, $line-height: null, $context: null) {
//     font-size: x-ceil-decimal(percentage($font-size / $context), 2);
//     @if ($line-height) {
//         line-height: x-ceil-decimal($line-height / $font-size, 4);
//     }
// }

// CSS Opacity
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// http://www.w3.org/TR/css3-color/#transparency
// http://www.quirksmode.org/css/opacity.html
@mixin opacity ($alpha) {
    @if $support-ie and $support-ie != 0 and $support-ie < 9 {
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{ $alpha * 100 })";
        @if $support-ie < 8 {
            filter: alpha(opacity=#{ $alpha * 100 });
        }
    }
    opacity: $alpha;
}


/* Add js Class */ 
/* ---------------------------------------------------- */
.none {	display: none!important; }				// jsoffの場合でも見えなくていい
.no-js .none {display: none!important; }	// はじめは見えていない要素に適用 常に要らない、js だけでみせるもの。
.hidden {	visibility: hidden; } 					// 後から見せる系の要素
.no-js .hidden{	visibility: visible; } 		// jsoffの場合、見せる
// クラスの命名について： "_"で開始はJSのための予約語にする。 IDに関してはご自由に。	動かす要素に関しては、可能な限り左上から(0,0) で置く。
// ロールオーバーは  "ov" はjsで使う。 hoverではなくovで。 img に _ov で。
// トップに戻るときに  a href="#" に、専用のクラスを何か付けようぜと。 class=""
// 可変で% 指定してある画像でさらにアニメーション（フェード）があるものは専用のクラス class="rimage" を振っておくように。IE8 （png の場合/jpegだとOK
